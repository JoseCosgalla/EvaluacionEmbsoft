@model AeropuertoApp.Web.Models.Reservation.DoReservation

@{
    ViewBag.Title = "Reservar asientos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Reservar asientos</h2>

@using (Html.BeginForm("DoReservation", "Reservation", FormMethod.Post, new { @class = "form form-inline" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.VueloId)

    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.AeropuertoOrigen, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.AeropuertoOrigen, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.AeropuertoOrigen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.AeropuertoDestino, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.AeropuertoDestino, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.AeropuertoDestino, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-4">
    </div>

    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.CostoEconomico, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.CostoEconomico, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.CostoEconomico, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.CostoNormal, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.CostoNormal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.CostoNormal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.CostoEjecutivo, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.CostoEjecutivo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.CostoEjecutivo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-4">
        <label class="col-md-4">Costo total</label>
        <div class="col-md-8">
            <input id="CostoTotal" type="text" value="" class="form-control" readonly="readonly" />
        </div>
    </div>

    <div class="form-group col-md-6">
        <div class="col-md-12">
            <input type="submit" value="Reservar" class="btn btn-primary" />
        </div>
    </div>

        <table id="TbReservacionAsientos" class="table table">
            <thead>
                <tr>
                    <th colspan="3">Seleccione sus asientos</th>
                </tr>
                <tr>
                    <th></th>
                    <th>
                        Asiento
                    </th>
                    <th>
                        Tipo de pasajero
                    </th>
                </tr>
            </thead>
            @for (int i = 0; i < Model.Tickets.Count; i++)
            {
                <tr>
                    <td scope="col">
                        @Html.HiddenFor(m => Model.Tickets[i].NumeroAsiento)
                        @Html.CheckBoxFor(m => Model.Tickets[i].Selected, new { onchange = "recalculateBuy()" })
                    </td>
                    <td scope="col">
                        @Html.DisplayFor(m => Model.Tickets[i].NumeroAsiento)
                    </td>
                    <td scope="col">
                        @Html.EnumDropDownListFor(m => Model.Tickets[i].TipoPasajero, new { @class = "TipoPasajero", onchange = "recalculateBuy()" })
                    </td>
                </tr>
            }
        </table>
}

<div>
    @Html.ActionLink("Volver a la lista", "GetAvailableFlights", null, new { @class = "btn btn-default" })
</div>

@section scripts {
    <script src="~/Content/Scripts/moment/moment.min.js"></script>
    <script type="text/javascript">
        function recalculateBuy() {
            costoEconomico = Number($('#CostoEconomico').val());
            costoNormal = Number($('#CostoNormal').val());
            costoEjecutivo = Number($('#CostoEjecutivo').val());
            contadorEconomico = 0; contadorNormal = 0; contadorEjecutivo = 0;
            $("#TbReservacionAsientos input[type=checkbox]:checked").each(function () {
                var row = $($(this).closest("tr")[0]);
                var tipoPasajeroInput = row.find('.TipoPasajero')[0];
                var tipoPasajero = $(tipoPasajeroInput).val();
                if (tipoPasajero == 1) {
                    contadorEconomico++;
                } else if (tipoPasajero == 2) {
                    contadorNormal++;
                } else if (tipoPasajero == 3) {
                    contadorEjecutivo++;
                }
            });
            costoTotal = costoEconomico * contadorEconomico + costoNormal * contadorNormal + costoEjecutivo * contadorEjecutivo;
            // formateador para numeros a cadenas de texto con formato de moneda
            var formatter = new Intl.NumberFormat('es-MX', {
                style: 'currency',
                currencyDisplay: 'symbol',
                currency: 'MXN'
            });

            $('#CostoTotal').val(formatter.format(costoTotal));
        }
    </script>
}
